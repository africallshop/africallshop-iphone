This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by opencore-amr configure 0.1.2, which was
generated by GNU Autoconf 2.67.  Invocation command line was

  $ /Users/karimjimo/Downloads/linphone-iphone/submodules/build/..//externals/opencore-amr/configure -prefix=/Users/karimjimo/Downloads/linphone-iphone/submodules/build/..//../liblinphone-sdk/armv7-apple-darwin --host=armv7-apple-darwin --disable-shared --enable-static

## --------- ##
## Platform. ##
## --------- ##

hostname = new-host-3.home
uname -m = x86_64
uname -r = 12.5.0
uname -s = Darwin
uname -v = Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64
Kernel configured for up to 4 processors.
2 processors are physically available.
4 processors are logically available.
Processor type: i486 (Intel 80486)
Processors active: 0 1 2 3
Primary memory available: 4.00 gigabytes
Default processor set: 131 tasks, 837 threads, 4 processors
Load average: 1.31, Mach factor: 2.68
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /opt/local/bin
PATH: /opt/local/sbin
PATH: /usr/bin
PATH: /bin
PATH: /usr/sbin
PATH: /sbin
PATH: /usr/local/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2552: loading site script /Users/karimjimo/Downloads/linphone-iphone/submodules/build/..//build/iphone-config.site
| # -*- shell-script -*-
| 
| SDK_VERSION_MAJOR=4
| SDK_VERSION=4.0
| MCPU=""
| if test "${host_alias}" = "i386-apple-darwin" ; then 
| 	PLATFORM=Simulator
| 	ARCH=i386
| 	CMAKE_OPTS="-DCMAKE_SYSTEM_PROCESSOR=i386"
| 	MCPU=""
| elif test "${host_alias}" = "armv6-apple-darwin" ; then 
| 	ARCH=armv6
| 	PLATFORM=OS
| 	CMAKE_OPTS="-DCMAKE_SYSTEM_PROCESSOR=arm"
| 	MCPU="-mcpu=arm1176jzf-s"
| elif test "${host_alias}" = "armv7-apple-darwin" ; then 
| 	ARCH=armv7
| 	PLATFORM=OS
| 	CMAKE_OPTS="-DCMAKE_SYSTEM_PROCESSOR=arm"
| 	MCPU="-mcpu=cortex-a8"
| elif test "${host_alias}" = "armv7s-apple-darwin" ; then 
| 	ARCH=armv7s
| 	PLATFORM=OS
| 	CMAKE_OPTS="-DCMAKE_SYSTEM_PROCESSOR=arm"
| else 
| 	echo "bad host ${host_alias} must be either i386-apple-darwin or armv6-apple-darwin"
| 	exit
| fi
| echo "Loading config.site for iPhone platform=${PLATFORM} version=${SDK_VERSION}"
| XCODE_DEV_PATH=`xcode-select -print-path`
| #new path with Xcode 4.3:
| if test -d ${XCODE_DEV_PATH}/Platforms/iPhone${PLATFORM}.platform/Developer/SDKs ; then
| 	SDK_PATH_LIST=`ls -drt ${XCODE_DEV_PATH}/Platforms/iPhone${PLATFORM}.platform/Developer/SDKs/iPhone${PLATFORM}*`
| 	SDK_BIN_PATH=${XCODE_DEV_PATH}/Platforms/iPhone${PLATFORM}.platform/Developer/usr/bin  
| else
| 	SDK_PATH_LIST=`ls -drt /Developer/Platforms/iPhone${PLATFORM}.platform/Developer/SDKs/iPhone${PLATFORM}*`
| 	SDK_BIN_PATH=/Developer/Platforms/iPhone${PLATFORM}.platform/Developer/usr/bin  
| fi
|    
| for SYSROOT_PATH in $SDK_PATH_LIST ; do echo $SYSROOT_PATH ; done ;
| echo "Selecting SDK path = ${SYSROOT_PATH}"
| 
| COMMON_FLAGS=" -arch ${ARCH} ${MCPU} -isysroot ${SYSROOT_PATH} -miphoneos-version-min=${SDK_VERSION} -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions"
| CC="xcrun clang -std=c99 $COMMON_FLAGS"
| OBJC="xcrun clang -std=c99 $COMMON_FLAGS"
| CXX="xcrun clang++ $COMMON_FLAGS"
| LD="xcrun ld -arch ${ARCH}"
| AR="xcrun ar"
| RANLIB="xcrun ranlib"
| STRIP="xcrun strip"
| NM="xcrun nm"
| 
| CPPFLAGS="-Dasm=__asm"
| OBJCFLAGS="-x objective-c -fexceptions -gdwarf-2 -fobjc-abi-version=2 -fobjc-legacy-dispatch"
| #Force install script to use -C so that header files don't get re-written if not changed.
| INSTALL_DATA="ginstall -C"
| 
| 
configure:2694: checking for a BSD-compatible install
configure:2762: result: /opt/local/bin/ginstall -c
configure:2773: checking whether build environment is sane
configure:2823: result: yes
configure:2872: checking for armv7-apple-darwin-strip
configure:2899: result: xcrun strip
configure:2964: checking for a thread-safe mkdir -p
configure:3003: result: /opt/local/bin/gmkdir -p
configure:3016: checking for gawk
configure:3046: result: no
configure:3016: checking for mawk
configure:3046: result: no
configure:3016: checking for nawk
configure:3046: result: no
configure:3016: checking for awk
configure:3032: found /usr/bin/awk
configure:3043: result: awk
configure:3054: checking whether make sets $(MAKE)
configure:3076: result: yes
configure:3151: checking how to create a ustar tar archive
configure:3164: tar --version
bsdtar 2.8.3 - libarchive 2.8.3
configure:3167: $? = 0
configure:3207: tardir=conftest.dir && eval tar --format=ustar -chf - "$tardir" >conftest.tar
configure:3210: $? = 0
configure:3214: tar -xf - <conftest.tar
configure:3217: $? = 0
configure:3230: result: gnutar
configure:3252: checking whether to enable maintainer-specific portions of Makefiles
configure:3261: result: no
configure:3280: checking build system type
configure:3294: result: i386-apple-darwin12.5.0
configure:3314: checking host system type
configure:3327: result: armv7-apple-darwin
configure:3525: checking for C++ compiler version
configure:3534: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions --version >&5
Apple LLVM version 5.0 (clang-500.2.76) (based on LLVM 3.3svn)
Target: arm-apple-darwin12.5.0
Thread model: posix
configure:3545: $? = 0
configure:3534: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -v >&5
Apple LLVM version 5.0 (clang-500.2.76) (based on LLVM 3.3svn)
Target: arm-apple-darwin12.5.0
Thread model: posix
clang: warning: argument unused during compilation: '-mcpu=cortex-a8'
clang: warning: argument unused during compilation: '-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk'
clang: warning: argument unused during compilation: '-miphoneos-version-min=4.0'
clang: warning: argument unused during compilation: '-D TARGET_OS_IPHONE=1'
clang: warning: argument unused during compilation: '-D __IOS'
clang: warning: argument unused during compilation: '-fms-extensions'
configure:3545: $? = 0
configure:3534: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:3545: $? = 1
configure:3534: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -qversion >&5
clang: error: no input files
configure:3545: $? = 1
configure:3565: checking whether the C++ compiler works
configure:3587: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions  -Dasm=__asm  conftest.cpp  >&5
configure:3591: $? = 0
configure:3639: result: yes
configure:3642: checking for C++ compiler default output file name
configure:3644: result: a.out
configure:3650: checking for suffix of executables
configure:3657: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -o conftest  -Dasm=__asm  conftest.cpp  >&5
configure:3661: $? = 0
configure:3683: result: 
configure:3705: checking whether we are cross compiling
configure:3713: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -o conftest  -Dasm=__asm  conftest.cpp  >&5
configure:3717: $? = 0
configure:3724: ./conftest
/Users/karimjimo/Downloads/linphone-iphone/submodules/build/..//externals/opencore-amr/configure: line 3726: ./conftest: Bad CPU type in executable
configure:3728: $? = 126
configure:3743: result: yes
configure:3748: checking for suffix of object files
configure:3770: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c  -Dasm=__asm conftest.cpp >&5
configure:3774: $? = 0
configure:3795: result: o
configure:3799: checking whether we are using the GNU C++ compiler
configure:3818: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c  -Dasm=__asm conftest.cpp >&5
configure:3818: $? = 0
configure:3827: result: yes
configure:3836: checking whether xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions accepts -g
configure:3856: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -Dasm=__asm conftest.cpp >&5
configure:3856: $? = 0
configure:3897: result: yes
configure:3931: checking for style of include used by make
configure:3959: result: GNU
configure:3984: checking dependency style of xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions
configure:4094: result: gcc3
configure:4117: checking for armv7-apple-darwin-gcc
configure:4144: result: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions
configure:4413: checking for C compiler version
configure:4422: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions --version >&5
Apple LLVM version 5.0 (clang-500.2.76) (based on LLVM 3.3svn)
Target: arm-apple-darwin12.5.0
Thread model: posix
configure:4433: $? = 0
configure:4422: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -v >&5
Apple LLVM version 5.0 (clang-500.2.76) (based on LLVM 3.3svn)
Target: arm-apple-darwin12.5.0
Thread model: posix
clang: warning: argument unused during compilation: '-std=c99'
clang: warning: argument unused during compilation: '-mcpu=cortex-a8'
clang: warning: argument unused during compilation: '-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk'
clang: warning: argument unused during compilation: '-miphoneos-version-min=4.0'
clang: warning: argument unused during compilation: '-D TARGET_OS_IPHONE=1'
clang: warning: argument unused during compilation: '-D __IOS'
clang: warning: argument unused during compilation: '-fms-extensions'
... rest of stderr output deleted ...
configure:4433: $? = 0
configure:4422: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:4433: $? = 1
configure:4422: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -qversion >&5
clang: error: no input files
configure:4433: $? = 1
configure:4437: checking whether we are using the GNU C compiler
configure:4456: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c  -Dasm=__asm conftest.c >&5
configure:4456: $? = 0
configure:4465: result: yes
configure:4474: checking whether xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions accepts -g
configure:4494: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -Dasm=__asm conftest.c >&5
configure:4494: $? = 0
configure:4535: result: yes
configure:4552: checking for xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions option to accept ISO C89
configure:4616: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions  -c -g -O2 -Dasm=__asm conftest.c >&5
configure:4616: $? = 0
configure:4629: result: none needed
configure:4651: checking dependency style of xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions
configure:4761: result: gcc3
configure:4777: checking whether ln -s works
configure:4781: result: yes
configure:4788: checking whether make sets $(MAKE)
configure:4810: result: yes
configure:4846: checking for a sed that does not truncate output
configure:4910: result: /usr/bin/sed
configure:4928: checking for grep that handles long lines and -e
configure:4986: result: /opt/local/bin/grep
configure:4991: checking for egrep
configure:5053: result: /opt/local/bin/grep -E
configure:5058: checking for fgrep
configure:5120: result: /opt/local/bin/grep -F
configure:5155: checking for ld used by xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions
configure:5222: result: xcrun ld -arch armv7
configure:5229: checking if the linker (xcrun ld -arch armv7) is GNU ld
configure:5244: result: no
configure:5256: checking for BSD- or MS-compatible name lister (nm)
configure:5305: result: xcrun nm
configure:5423: checking the name lister (xcrun nm) interface
configure:5430: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:5433: xcrun nm "conftest.o"
configure:5436: output
00000240 S _some_variable
configure:5443: result: BSD nm
configure:5447: checking the maximum length of command line arguments
configure:5567: result: 196608
configure:5584: checking whether the shell understands some XSI constructs
configure:5594: result: yes
configure:5598: checking whether the shell understands "+="
configure:5604: result: yes
configure:5639: checking for xcrun ld -arch armv7 option to reload object files
configure:5646: result: -r
configure:5675: checking for armv7-apple-darwin-objdump
configure:5705: result: no
configure:5715: checking for objdump
configure:5745: result: no
configure:5774: checking how to recognize dependent libraries
configure:5970: result: pass_all
configure:5990: checking for armv7-apple-darwin-ar
configure:6017: result: xcrun ar
configure:6095: checking for armv7-apple-darwin-strip
configure:6122: result: xcrun strip
configure:6194: checking for armv7-apple-darwin-ranlib
configure:6221: result: xcrun ranlib
configure:6351: checking command to parse xcrun nm output from xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions object
configure:6469: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:6472: $? = 0
configure:6476: xcrun nm conftest.o \| sed -n -e 's/^.*[	 ]\([BCDEGRST][BCDEGRST]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' \> conftest.nm
configure:6479: $? = 0
cannot find nm_test_var in conftest.nm
configure:6469: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:6472: $? = 0
configure:6476: xcrun nm conftest.o \| sed -n -e 's/^.*[	 ]\([BCDEGRST][BCDEGRST]*\)[	 ][	 ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p' \> conftest.nm
configure:6479: $? = 0
configure:6533: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -o conftest -g -O2 -Dasm=__asm  conftest.c conftstm.o >&5
configure:6536: $? = 0
configure:6574: result: ok
configure:6799: checking for armv7-apple-darwin-dsymutil
configure:6829: result: no
configure:6839: checking for dsymutil
configure:6855: found /usr/bin/dsymutil
configure:6866: result: dsymutil
configure:6878: WARNING: using cross tools not prefixed with host triplet
configure:6891: checking for armv7-apple-darwin-nmedit
configure:6921: result: no
configure:6931: checking for nmedit
configure:6947: found /usr/bin/nmedit
configure:6958: result: nmedit
configure:6983: checking for armv7-apple-darwin-lipo
configure:7013: result: no
configure:7023: checking for lipo
configure:7039: found /usr/bin/lipo
configure:7050: result: lipo
configure:7075: checking for armv7-apple-darwin-otool
configure:7105: result: no
configure:7115: checking for otool
configure:7131: found /usr/bin/otool
configure:7142: result: otool
configure:7167: checking for armv7-apple-darwin-otool64
configure:7197: result: no
configure:7207: checking for otool64
configure:7237: result: no
configure:7282: checking for -single_module linker flag
xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -g -O2  -o libconftest.dylib -dynamiclib -Wl,-single_module conftest.c
configure:7309: result: yes
configure:7311: checking for -exported_symbols_list linker flag
configure:7331: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -o conftest -g -O2 -Dasm=__asm  -Wl,-exported_symbols_list,conftest.sym conftest.c  >&5
configure:7331: $? = 0
configure:7341: result: yes
configure:7383: checking how to run the C preprocessor
configure:7414: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E -Dasm=__asm conftest.c
configure:7414: $? = 0
configure:7428: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E -Dasm=__asm conftest.c
conftest.c:11:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^
1 error generated.
configure:7428: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "opencore-amr"
| #define PACKAGE_TARNAME "opencore-amr"
| #define PACKAGE_VERSION "0.1.2"
| #define PACKAGE_STRING "opencore-amr 0.1.2"
| #define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
| #define PACKAGE_URL ""
| #define PACKAGE "opencore-amr"
| #define VERSION "0.1.2"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:7453: result: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E
configure:7473: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E -Dasm=__asm conftest.c
configure:7473: $? = 0
configure:7487: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E -Dasm=__asm conftest.c
conftest.c:11:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^
1 error generated.
configure:7487: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "opencore-amr"
| #define PACKAGE_TARNAME "opencore-amr"
| #define PACKAGE_VERSION "0.1.2"
| #define PACKAGE_STRING "opencore-amr 0.1.2"
| #define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
| #define PACKAGE_URL ""
| #define PACKAGE "opencore-amr"
| #define VERSION "0.1.2"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:7516: checking for ANSI C header files
configure:7536: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7536: $? = 0
configure:7620: result: yes
configure:7633: checking for sys/types.h
configure:7633: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7633: $? = 0
configure:7633: result: yes
configure:7633: checking for sys/stat.h
configure:7633: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7633: $? = 0
configure:7633: result: yes
configure:7633: checking for stdlib.h
configure:7633: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7633: $? = 0
configure:7633: result: yes
configure:7633: checking for string.h
configure:7633: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7633: $? = 0
configure:7633: result: yes
configure:7633: checking for memory.h
configure:7633: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7633: $? = 0
configure:7633: result: yes
configure:7633: checking for strings.h
configure:7633: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7633: $? = 0
configure:7633: result: yes
configure:7633: checking for inttypes.h
configure:7633: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7633: $? = 0
configure:7633: result: yes
configure:7633: checking for stdint.h
configure:7633: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7633: $? = 0
configure:7633: result: yes
configure:7633: checking for unistd.h
configure:7633: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7633: $? = 0
configure:7633: result: yes
configure:7647: checking for dlfcn.h
configure:7647: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:7647: $? = 0
configure:7647: result: yes
configure:7772: checking for C++ compiler version
configure:7781: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions --version >&5
Apple LLVM version 5.0 (clang-500.2.76) (based on LLVM 3.3svn)
Target: arm-apple-darwin12.5.0
Thread model: posix
configure:7792: $? = 0
configure:7781: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -v >&5
Apple LLVM version 5.0 (clang-500.2.76) (based on LLVM 3.3svn)
Target: arm-apple-darwin12.5.0
Thread model: posix
clang: warning: argument unused during compilation: '-mcpu=cortex-a8'
clang: warning: argument unused during compilation: '-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk'
clang: warning: argument unused during compilation: '-miphoneos-version-min=4.0'
clang: warning: argument unused during compilation: '-D TARGET_OS_IPHONE=1'
clang: warning: argument unused during compilation: '-D __IOS'
clang: warning: argument unused during compilation: '-fms-extensions'
configure:7792: $? = 0
configure:7781: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:7792: $? = 1
configure:7781: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -qversion >&5
clang: error: no input files
configure:7792: $? = 1
configure:7796: checking whether we are using the GNU C++ compiler
configure:7824: result: yes
configure:7833: checking whether xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions accepts -g
configure:7894: result: yes
configure:7919: checking dependency style of xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions
configure:8029: result: gcc3
configure:8052: checking how to run the C++ preprocessor
configure:8079: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E -Dasm=__asm conftest.cpp
configure:8079: $? = 0
configure:8093: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E -Dasm=__asm conftest.cpp
conftest.cpp:22:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^
1 error generated.
configure:8093: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "opencore-amr"
| #define PACKAGE_TARNAME "opencore-amr"
| #define PACKAGE_VERSION "0.1.2"
| #define PACKAGE_STRING "opencore-amr 0.1.2"
| #define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
| #define PACKAGE_URL ""
| #define PACKAGE "opencore-amr"
| #define VERSION "0.1.2"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:8118: result: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E
configure:8138: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E -Dasm=__asm conftest.cpp
configure:8138: $? = 0
configure:8152: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E -Dasm=__asm conftest.cpp
conftest.cpp:22:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^
1 error generated.
configure:8152: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "opencore-amr"
| #define PACKAGE_TARNAME "opencore-amr"
| #define PACKAGE_VERSION "0.1.2"
| #define PACKAGE_STRING "opencore-amr 0.1.2"
| #define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
| #define PACKAGE_URL ""
| #define PACKAGE "opencore-amr"
| #define VERSION "0.1.2"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:8358: checking for objdir
configure:8373: result: .libs
configure:8669: checking if xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions supports -fno-rtti -fno-exceptions
configure:8687: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm -fno-rtti -fno-exceptions conftest.c >&5
configure:8691: $? = 0
configure:8704: result: yes
configure:8724: checking for xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions option to produce PIC
configure:8996: result: -fno-common -DPIC
configure:9008: checking if xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions PIC flag -fno-common -DPIC works
configure:9026: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm -fno-common -DPIC -DPIC conftest.c >&5
configure:9030: $? = 0
configure:9043: result: yes
configure:9067: checking if xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions static flag -static works
configure:9095: result: no
configure:9110: checking if xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions supports -c -o file.o
configure:9131: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm -o out/conftest2.o conftest.c >&5
configure:9135: $? = 0
configure:9157: result: yes
configure:9165: checking if xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions supports -c -o file.o
configure:9212: result: yes
configure:9245: checking whether the xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions linker (xcrun ld -arch armv7) supports shared libraries
configure:10235: result: yes
configure:10474: checking dynamic linker characteristics
configure:11137: result: darwin dyld
configure:11239: checking how to hardcode library paths into programs
configure:11264: result: immediate
configure:11784: checking whether stripping libraries is possible
configure:11798: result: yes
configure:11824: checking if libtool supports shared libraries
configure:11826: result: yes
configure:11829: checking whether to build shared libraries
configure:11850: result: no
configure:11853: checking whether to build static libraries
configure:11857: result: yes
configure:12007: checking for ld used by xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions
configure:12074: result: xcrun ld -arch armv7
configure:12081: checking if the linker (xcrun ld -arch armv7) is GNU ld
configure:12096: result: no
configure:12151: checking whether the xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions linker (xcrun ld -arch armv7) supports shared libraries
configure:13064: result: yes
configure:13092: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.cpp >&5
configure:13095: $? = 0
configure:13277: checking for xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions option to produce PIC
configure:13594: result: -fno-common -DPIC
configure:13603: checking if xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions PIC flag -fno-common -DPIC works
configure:13621: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm -fno-common -DPIC -DPIC conftest.cpp >&5
configure:13625: $? = 0
configure:13638: result: yes
configure:13659: checking if xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions static flag -static works
configure:13687: result: no
configure:13699: checking if xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions supports -c -o file.o
configure:13720: xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm -o out/conftest2.o conftest.cpp >&5
configure:13724: $? = 0
configure:13746: result: yes
configure:13751: checking if xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions supports -c -o file.o
configure:13798: result: yes
configure:13828: checking whether the xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions linker (xcrun ld -arch armv7) supports shared libraries
configure:13857: result: yes
configure:13994: checking dynamic linker characteristics
configure:14605: result: darwin dyld
configure:14656: checking how to hardcode library paths into programs
configure:14681: result: immediate
configure:14742: checking for main in -lm
configure:14761: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -o conftest -g -O2 -Dasm=__asm  conftest.c -lm   >&5
configure:14761: $? = 0
configure:14770: result: yes
configure:14786: checking for stdint.h
configure:14786: result: yes
configure:14786: checking for stdlib.h
configure:14786: result: yes
configure:14786: checking for string.h
configure:14786: result: yes
configure:14798: checking for stdbool.h that conforms to C99
configure:14883: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:14883: $? = 0
configure:14890: result: yes
configure:14892: checking for _Bool
configure:14892: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:14892: $? = 0
configure:14892: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
conftest.c:63:20: error: expected expression
if (sizeof ((_Bool)))
                   ^
1 error generated.
configure:14892: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "opencore-amr"
| #define PACKAGE_TARNAME "opencore-amr"
| #define PACKAGE_VERSION "0.1.2"
| #define PACKAGE_STRING "opencore-amr 0.1.2"
| #define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
| #define PACKAGE_URL ""
| #define PACKAGE "opencore-amr"
| #define VERSION "0.1.2"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBM 1
| #define HAVE_STDINT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((_Bool)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:14892: result: yes
configure:14908: checking for inline
configure:14924: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:14924: $? = 0
configure:14932: result: inline
configure:14950: checking for int16_t
configure:14950: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:14950: $? = 0
configure:14950: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
conftest.c:66:24: error: 'test_array' declared as an array with a negative size
static int test_array [1 - 2 * !((int16_t) (((((int16_t) 1 << N) << N) - 1) * 2 + 1)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
configure:14950: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "opencore-amr"
| #define PACKAGE_TARNAME "opencore-amr"
| #define PACKAGE_VERSION "0.1.2"
| #define PACKAGE_STRING "opencore-amr 0.1.2"
| #define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
| #define PACKAGE_URL ""
| #define PACKAGE "opencore-amr"
| #define VERSION "0.1.2"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBM 1
| #define HAVE_STDINT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE__BOOL 1
| #define HAVE_STDBOOL_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| 	        enum { N = 16 / 2 - 1 };
| int
| main ()
| {
| static int test_array [1 - 2 * !((int16_t) (((((int16_t) 1 << N) << N) - 1) * 2 + 1)
| 		 < (int16_t) (((((int16_t) 1 << N) << N) - 1) * 2 + 2))];
| test_array [0] = 0
| 
|   ;
|   return 0;
| }
configure:14950: result: yes
configure:14961: checking for int32_t
configure:14961: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:14961: $? = 0
configure:14961: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
conftest.c:66:24: error: 'test_array' declared as an array with a negative size
static int test_array [1 - 2 * !((int32_t) (((((int32_t) 1 << N) << N) - 1) * 2 + 1)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
configure:14961: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "opencore-amr"
| #define PACKAGE_TARNAME "opencore-amr"
| #define PACKAGE_VERSION "0.1.2"
| #define PACKAGE_STRING "opencore-amr 0.1.2"
| #define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
| #define PACKAGE_URL ""
| #define PACKAGE "opencore-amr"
| #define VERSION "0.1.2"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBM 1
| #define HAVE_STDINT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE__BOOL 1
| #define HAVE_STDBOOL_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| 	        enum { N = 32 / 2 - 1 };
| int
| main ()
| {
| static int test_array [1 - 2 * !((int32_t) (((((int32_t) 1 << N) << N) - 1) * 2 + 1)
| 		 < (int32_t) (((((int32_t) 1 << N) << N) - 1) * 2 + 2))];
| test_array [0] = 0
| 
|   ;
|   return 0;
| }
configure:14961: result: yes
configure:14972: checking for int64_t
configure:14972: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:14972: $? = 0
configure:14972: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
conftest.c:66:24: error: 'test_array' declared as an array with a negative size
static int test_array [1 - 2 * !((int64_t) (((((int64_t) 1 << N) << N) - 1) * 2 + 1)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
configure:14972: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "opencore-amr"
| #define PACKAGE_TARNAME "opencore-amr"
| #define PACKAGE_VERSION "0.1.2"
| #define PACKAGE_STRING "opencore-amr 0.1.2"
| #define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
| #define PACKAGE_URL ""
| #define PACKAGE "opencore-amr"
| #define VERSION "0.1.2"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBM 1
| #define HAVE_STDINT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE__BOOL 1
| #define HAVE_STDBOOL_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| 	        enum { N = 64 / 2 - 1 };
| int
| main ()
| {
| static int test_array [1 - 2 * !((int64_t) (((((int64_t) 1 << N) << N) - 1) * 2 + 1)
| 		 < (int64_t) (((((int64_t) 1 << N) << N) - 1) * 2 + 2))];
| test_array [0] = 0
| 
|   ;
|   return 0;
| }
configure:14972: result: yes
configure:14983: checking for int8_t
configure:14983: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:14983: $? = 0
configure:14983: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
conftest.c:66:24: error: 'test_array' declared as an array with a negative size
static int test_array [1 - 2 * !((int8_t) (((((int8_t) 1 << N) << N) - 1) * 2 + 1)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
configure:14983: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "opencore-amr"
| #define PACKAGE_TARNAME "opencore-amr"
| #define PACKAGE_VERSION "0.1.2"
| #define PACKAGE_STRING "opencore-amr 0.1.2"
| #define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
| #define PACKAGE_URL ""
| #define PACKAGE "opencore-amr"
| #define VERSION "0.1.2"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBM 1
| #define HAVE_STDINT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE__BOOL 1
| #define HAVE_STDBOOL_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| 	        enum { N = 8 / 2 - 1 };
| int
| main ()
| {
| static int test_array [1 - 2 * !((int8_t) (((((int8_t) 1 << N) << N) - 1) * 2 + 1)
| 		 < (int8_t) (((((int8_t) 1 << N) << N) - 1) * 2 + 2))];
| test_array [0] = 0
| 
|   ;
|   return 0;
| }
configure:14983: result: yes
configure:14994: checking for uint16_t
configure:14994: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:14994: $? = 0
configure:14994: result: yes
configure:15006: checking for uint32_t
configure:15006: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:15006: $? = 0
configure:15006: result: yes
configure:15020: checking for uint64_t
configure:15020: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:15020: $? = 0
configure:15020: result: yes
configure:15034: checking for uint8_t
configure:15034: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -c -g -O2 -Dasm=__asm conftest.c >&5
configure:15034: $? = 0
configure:15034: result: yes
configure:15052: checking for stdlib.h
configure:15052: result: yes
configure:15062: checking for GNU libc compatible malloc
configure:15096: result: no
configure:15119: checking for memset
configure:15119: xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -o conftest -g -O2 -Dasm=__asm  conftest.c -lm  >&5
conftest.c:55:6: warning: incompatible redeclaration of library function 'memset' [-Wincompatible-library-redeclaration]
char memset ();
     ^
conftest.c:55:6: note: 'memset' is a builtin with type 'void *(void *, int, unsigned long)'
1 warning generated.
configure:15119: $? = 0
configure:15119: result: yes
configure:15286: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by opencore-amr config.status 0.1.2, which was
generated by GNU Autoconf 2.67.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on new-host-3.home

config.status:1162: creating Makefile
config.status:1162: creating amrnb/Makefile
config.status:1162: creating amrwb/Makefile
config.status:1162: creating test/Makefile
config.status:1162: creating amrnb/opencore-amrnb.pc
config.status:1162: creating amrwb/opencore-amrwb.pc
config.status:1162: creating config.h
config.status:1375: executing depfiles commands
config.status:1375: executing libtool commands

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=i386-apple-darwin12.5.0
ac_cv_c_compiler_gnu=yes
ac_cv_c_inline=inline
ac_cv_c_int16_t=yes
ac_cv_c_int32_t=yes
ac_cv_c_int64_t=yes
ac_cv_c_int8_t=yes
ac_cv_c_uint16_t=yes
ac_cv_c_uint32_t=yes
ac_cv_c_uint64_t=yes
ac_cv_c_uint8_t=yes
ac_cv_cxx_compiler_gnu=yes
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXCPP_set=
ac_cv_env_CXXCPP_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=
ac_cv_env_CXX_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=set
ac_cv_env_host_alias_value=armv7-apple-darwin
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_malloc_0_nonnull=no
ac_cv_func_memset=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_stdbool_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=armv7-apple-darwin
ac_cv_lib_m_main=yes
ac_cv_objext=o
ac_cv_path_EGREP='/opt/local/bin/grep -E'
ac_cv_path_FGREP='/opt/local/bin/grep -F'
ac_cv_path_GREP=/opt/local/bin/grep
ac_cv_path_SED=/usr/bin/sed
ac_cv_path_install='/opt/local/bin/ginstall -c'
ac_cv_path_mkdir=/opt/local/bin/gmkdir
ac_cv_prog_AR='xcrun ar'
ac_cv_prog_AWK=awk
ac_cv_prog_CC='xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions'
ac_cv_prog_CPP='xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E'
ac_cv_prog_CXXCPP='xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E'
ac_cv_prog_RANLIB='xcrun ranlib'
ac_cv_prog_STRIP='xcrun strip'
ac_cv_prog_ac_ct_DSYMUTIL=dsymutil
ac_cv_prog_ac_ct_LIPO=lipo
ac_cv_prog_ac_ct_NMEDIT=nmedit
ac_cv_prog_ac_ct_OTOOL=otool
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_cxx_g=yes
ac_cv_prog_make_make_set=yes
ac_cv_type__Bool=yes
am_cv_CC_dependencies_compiler_type=gcc3
am_cv_CXX_dependencies_compiler_type=gcc3
am_cv_prog_tar_ustar=gnutar
lt_cv_apple_cc_single_mod=yes
lt_cv_deplibs_check_method=pass_all
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_exported_symbols_list=yes
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD='xcrun ld -arch armv7'
lt_cv_path_LDCXX='xcrun ld -arch armv7'
lt_cv_path_NM='xcrun nm'
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_c_o_CXX=yes
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_pic_works_CXX=yes
lt_cv_prog_compiler_rtti_exceptions=yes
lt_cv_prog_compiler_static_works=no
lt_cv_prog_compiler_static_works_CXX=no
lt_cv_prog_gnu_ld=no
lt_cv_prog_gnu_ldcxx=no
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([BCDEGRST][BCDEGRST]*\)[	 ][	 ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[BCDEGRST]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[BCDEGRST]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[BCDEGRST]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[BCDEGRST]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_max_cmd_len=196608

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /Users/karimjimo/Downloads/linphone-iphone/submodules/externals/opencore-amr/missing --run aclocal-1.11'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMRNB_DECODER_FALSE='#'
AMRNB_DECODER_TRUE=''
AMRNB_ENCODER_FALSE='#'
AMRNB_ENCODER_TRUE=''
AMTAR='${SHELL} /Users/karimjimo/Downloads/linphone-iphone/submodules/externals/opencore-amr/missing --run tar'
AM_BACKSLASH='\'
AM_DEFAULT_VERBOSITY='0'
AR='xcrun ar'
AUTOCONF='${SHELL} /Users/karimjimo/Downloads/linphone-iphone/submodules/externals/opencore-amr/missing --run autoconf'
AUTOHEADER='${SHELL} /Users/karimjimo/Downloads/linphone-iphone/submodules/externals/opencore-amr/missing --run autoheader'
AUTOMAKE='${SHELL} /Users/karimjimo/Downloads/linphone-iphone/submodules/externals/opencore-amr/missing --run automake-1.11'
AWK='awk'
CC='xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions'
CCDEPMODE='depmode=gcc3'
CFLAGS='-g -O2'
COMPILE_AS_C_FALSE='#'
COMPILE_AS_C_TRUE=''
CPP='xcrun clang -std=c99  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E'
CPPFLAGS='-Dasm=__asm'
CXX='xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions'
CXXCPP='xcrun clang++  -arch armv7 -mcpu=cortex-a8 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -miphoneos-version-min=4.0 -DTARGET_OS_IPHONE=1 -D__IOS -fms-extensions -E'
CXXDEPMODE='depmode=gcc3'
CXXFLAGS='-g -O2'
CYGPATH_W='echo'
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
DSYMUTIL='dsymutil'
DUMPBIN=''
ECHO_C='\c'
ECHO_N=''
ECHO_T=''
EGREP='/opt/local/bin/grep -E'
EXEEXT=''
FGREP='/opt/local/bin/grep -F'
GCC_ARMV5_FALSE=''
GCC_ARMV5_TRUE='#'
GREP='/opt/local/bin/grep'
INSTALL_DATA='ginstall -C'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LD='xcrun ld -arch armv7'
LDFLAGS=''
LIBOBJS=' ${LIBOBJDIR}malloc$U.o'
LIBS='-lm '
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIBTOOL_DEPS='/Users/karimjimo/Downloads/linphone-iphone/submodules/build/..//externals/opencore-amr/./ltmain.sh'
LIPO='lipo'
LN_S='ln -s'
LTLIBOBJS=' ${LIBOBJDIR}malloc$U.lo'
MAINT='#'
MAINTAINER_MODE_FALSE=''
MAINTAINER_MODE_TRUE='#'
MAKEINFO='${SHELL} /Users/karimjimo/Downloads/linphone-iphone/submodules/externals/opencore-amr/missing --run makeinfo'
MKDIR_P='/opt/local/bin/gmkdir -p'
NM='xcrun nm'
NMEDIT='nmedit'
OBJDUMP='false'
OBJEXT='o'
OPENCORE_AMRNB_VERSION='0:2:0'
OPENCORE_AMRWB_VERSION='0:2:0'
OTOOL64=':'
OTOOL='otool'
PACKAGE='opencore-amr'
PACKAGE_BUGREPORT='https://sourceforge.net/apps/trac/opencore-amr/'
PACKAGE_NAME='opencore-amr'
PACKAGE_STRING='opencore-amr 0.1.2'
PACKAGE_TARNAME='opencore-amr'
PACKAGE_URL=''
PACKAGE_VERSION='0.1.2'
PATH_SEPARATOR=':'
RANLIB='xcrun ranlib'
SED='/usr/bin/sed'
SET_MAKE=''
SHELL='/bin/sh'
STRIP='xcrun strip'
VERSION='0.1.2'
ac_ct_CC=''
ac_ct_CXX=''
ac_ct_DUMPBIN=''
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCC_FALSE='#'
am__fastdepCC_TRUE=''
am__fastdepCXX_FALSE='#'
am__fastdepCXX_TRUE=''
am__include='include'
am__isrc=' -I$(srcdir)'
am__leading_dot='.'
am__quote=''
am__tar='tar --format=ustar -chf - "$$tardir"'
am__untar='tar -xf -'
bindir='${exec_prefix}/bin'
build='i386-apple-darwin12.5.0'
build_alias=''
build_cpu='i386'
build_os='darwin12.5.0'
build_vendor='apple'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='armv7-apple-darwin'
host_alias='armv7-apple-darwin'
host_cpu='armv7'
host_os='darwin'
host_vendor='apple'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /Users/karimjimo/Downloads/linphone-iphone/submodules/externals/opencore-amr/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
lt_ECHO='/bin/echo'
mandir='${datarootdir}/man'
mkdir_p='/opt/local/bin/gmkdir -p'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/Users/karimjimo/Downloads/linphone-iphone/submodules/build/..//../liblinphone-sdk/armv7-apple-darwin'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "opencore-amr"
#define PACKAGE_TARNAME "opencore-amr"
#define PACKAGE_VERSION "0.1.2"
#define PACKAGE_STRING "opencore-amr 0.1.2"
#define PACKAGE_BUGREPORT "https://sourceforge.net/apps/trac/opencore-amr/"
#define PACKAGE_URL ""
#define PACKAGE "opencore-amr"
#define VERSION "0.1.2"
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define HAVE_LIBM 1
#define HAVE_STDINT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE__BOOL 1
#define HAVE_STDBOOL_H 1
#define HAVE_STDLIB_H 1
#define HAVE_MALLOC 0
#define malloc rpl_malloc
#define HAVE_MEMSET 1

configure: exit 0
